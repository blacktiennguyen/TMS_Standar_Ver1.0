@model TMS.WebAPP.Models.MasterDataModel.ItemTypeModel
@using TMS.WebAPP.HtmlExtension
@{
    Layout = "~/Views/Shared/_TSMMasterDataSetupAndReportLayout_Detail.cshtml";
}

@Html.AntiForgeryToken()
<!-- Content Header (Page header) -->
<section class="content-header margin-bottom-10px heigh-30px">
    <h1 class="float-left">
        @MessageManager.GetCaptionValueByKey("lblItemType")
    </h1>

    <div class="float-right">
        <a class="btn btn-primary margin-bottom-5px" href="@Url.Action("Create")">
            <i class="fa fa-plus-square"></i>
            @MessageManager.GetCaptionValueByKey("btnAddnew")
        </a>
        <button type="submit" name="download-catalog-pdf" class="display-none btn bg-purple margin-bottom-5px" formaction="/Admin/Product/DownloadCatalogPDF">
            <i class="fa fa-file-pdf-o"></i>
            @MessageManager.GetCaptionValueByKey("btnDownloadPDF")
        </button>
        <div class="btn-group display-none">
            <button type="button" class="btn btn-success margin-bottom-5px">
                <i class="fa fa-download"></i>
                @MessageManager.GetCaptionValueByKey("btnExport")
            </button>
            <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">&nbsp;</span>
            </button>

            <ul class="dropdown-menu" role="menu">
                <li>
                    <a href="#">
                        <i class="fa fa-file-code-o"></i>
                        @MessageManager.GetCaptionValueByKey("btnExportXML") (@MessageManager.GetCaptionValueByKey("lblAll"))
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fa fa-file-code-o"></i>
                        @MessageManager.GetCaptionValueByKey("btnExportXML") (@MessageManager.GetCaptionValueByKey("lblSelected"))
                    </a>
                </li>
                <li class="divider"></li>
                <li>
                    <a href="#">
                        <i class="fa fa-file-excel-o"></i>
                        @MessageManager.GetCaptionValueByKey("btnExportExcel") (@MessageManager.GetCaptionValueByKey("lblAll"))
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fa fa-file-excel-o"></i>
                        @MessageManager.GetCaptionValueByKey("btnExportExcel") (@MessageManager.GetCaptionValueByKey("lblSelected"))
                    </a>
                </li>
            </ul>
        </div>
        <button type="button" name="importexcel" class="display-none btn bg-olive margin-bottom-5px" data-toggle="modal" data-target="#importexcel-window">
            <i class="fa fa-upload"></i>
            @MessageManager.GetCaptionValueByKey("btnImport")
        </button>
        <button type="button" disabled id="delete-selected" class="btn btn-danger margin-bottom-5px" data-toggle="modal" data-target="#delete-selected-action-confirmation" name="">
            <i class="fa fa-trash"></i>

            @MessageManager.GetCaptionValueByKey("btnDelete") (@MessageManager.GetCaptionValueByKey("lblSelected"))
        </button>

        <!-- Modal Poup Delete Multiple -->
        <div id="delete-selected-action-confirmation" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="delete-selected-action-confirmation-title">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="delete-selected-action-confirmation-title">@MessageManager.GetCaptionValueByKey("lblDeleteConfirm")</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                    </div>
                    <div class="modal-body">
                        @MessageManager.GetCaptionValueByKey("lblAreYouSure")
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="delete-selected-action-confirmation-submit-button" class="btn btn-primary">
                            @MessageManager.GetCaptionValueByKey("btnYes")
                        </button>
                        <span id="canceldelete" class="btn btn-default float-right margin-r-5" data-dismiss="modal">@MessageManager.GetCaptionValueByKey("btnCancel")</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Poup Delete One -->
        <div class="modal fade" id="modalDelete" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@MessageManager.GetCaptionValueByKey("lblDeleteConfirm")</h4>
                    </div>
                    <div class="modal-body">
                        <p>@MessageManager.GetCaptionValueByKey("lblAreYouSure")</p>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="btnYes" class="btn btn-primary">
                            @MessageManager.GetCaptionValueByKey("btnYes")
                        </button>
                        <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">@MessageManager.GetCaptionValueByKey("btnCancel")</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content">
    <!-- Search -->
    <div class="row row-margin-15px margin-top-8px">
        <div class="col-xs-12">
            <!-- Search -->
            <div class="box box-solid">
                <div class="box-header">
                    <i class="fa fa-search"></i>
                    <h3 class="box-title">@MessageManager.GetCaptionValueByKey("lblSearch")</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-default btn-sm" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="row filter-status">
                        <div class="form-group col-md-6">
                            <div class="form-group row">
                                <label class="col-md-4 control-label margin-top-8px">
                                    @MessageManager.GetCaptionValueByKey("lblCode")
                                </label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.Code, new { @id = "search_code", @class = "form-control", @placeholder = @MessageManager.GetCaptionValueByKey("lblCode") })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <div class="form-group row">
                                <label class="col-md-4 control-label margin-top-8px">
                                    @MessageManager.GetCaptionValueByKey("lblNameDefault")
                                </label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.Name, new { @id = "search_name", @class = "form-control", @placeholder = @MessageManager.GetCaptionValueByKey("lblNameDefault") })
                                    @*<input type="text" class="form-control" id="ItemTypename" placeholder="@MessageManager.GetCaptionValueByKey("lblItemType")">*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row  text-center">
                        <button type="button" id="btnSearch" class="btn btn-primary margin-top-8px">
                            <i class="fa fa-search"></i>
                            @MessageManager.GetCaptionValueByKey("lblSearch")
                        </button>
                    </div>

                    <p></p>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
    <!-- Grid Data-->
    <div class="panel panel-default">
        <div class="panel-body">
            <div id="itemtype-grid" class="row margin-left-0px margin-right-0px">
            </div>
            <script>
                $(document).ready(function () {
                    $("#itemtype-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("ItemTypeList", "ItemType"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors"
                            },
                            error: function (e) {
                                //display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: 15,
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true

                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [10, 15, 20, 50, 100, 200, 500, 2000]
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        columnMenu: true,
                        scrollable: true,
                        resizable: true,
                        dataBound: onDataBound,
                        columns: [

                            {
                                field: "Id",
                                headerTemplate: "<input id='mastercheckbox' type='checkbox' />",
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: "<input type='checkbox' value='#=Id#' class='checkboxGroups' />",
                                width: 80
                            },
                            {
                                field: "Id",
                                title: "@MessageManager.GetCaptionValueByKey("btnDelete")",
                                width: 95,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '<button onClick="removeItem(#=Id#)" type="button" class="btn btn-danger cursor-pointer"><i class="fa fa-trash"></i></button>'
                            },
                            {
                                field: "Id",
                                title: "@MessageManager.GetCaptionValueByKey("btnEdit")",
                                width: 95,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '<a class="btn btn-info cursor-pointer" href="Edit/#=Id#"><i class="fa fa-pencil"></i></a>'
                            },
                            {
                                field: "Code",
                                headerAttributes: { style: "text-align:center" },
                                title: "@MessageManager.GetCaptionValueByKey("lblCode")",
                                template: '<a href="Edit/#=Id#">#=Code#</a>',
                                width: 100
                            },
                            {
                                field: "Name",
                                headerAttributes: { style: "text-align:center" },
                                title: "@MessageManager.GetCaptionValueByKey("lblNameDefault")",
                                width: 350

                            },
                            {
                                field: "NameLL",
                                headerAttributes: { style: "text-align:center" },
                                title: "@MessageManager.GetCaptionValueByKey("lblNameLocalLanguage")",
                                width: 350

                            },
                            {
                                field: "Remark",
                                headerAttributes: { style: "text-align:center" },
                                title: "@MessageManager.GetCaptionValueByKey("lblRemark")",
                                width: 250
                            }
                        ]
                    });
                });
            </script>

            <script type="text/javascript">
                var selectedIds = [];

                $(document).ready(function () {

                    //search button
                    $('#btnSearch').click(function () {
                        //search
                        var grid = $('#itemtype-grid').data('kendoGrid');
                        grid.dataSource.page(1); //new search. Set page size to 1
                        //grid.dataSource.read(); we already loaded the grid above using "page" function
                        //clear selected checkboxes
                        $('.checkboxGroups').attr('checked', false).change();
                        selectedIds = [];
                        return false;

                    });

                    $("#search_code").keydown(function (event) {
                        if (event.keyCode === 13) {
                            $("#btnSearch").click();
                            return false;
                        }
                    });

                    $("#search_name").keydown(function (event) {
                        if (event.keyCode === 13) {
                            $("#btnSearch").click();
                            return false;
                        }
                    });

                    $("#delete-selected-action-confirmation-submit-button").click(function () {
                        var postData = {
                            selectedIds: selectedIds
                        };
                        //addAntiForgeryToken(postData);

                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "@(Url.Action("DeleteSelected", "ItemType"))",
                            data: postData,
                            complete: function (data) {
                                //reload grid
                                var grid = $('#itemtype-grid').data('kendoGrid');
                                grid.dataSource.read();
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                //alert(thrownError);
                            },
                            traditional: true
                        });

                        $("#canceldelete").trigger("click");
                    })

                    //$('#mastercheckbox').click(function () {
                    //    $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                    //});

                    $('#mastercheckbox').change(function (ev) {
                        if ($(this).is(':checked')) {
                            $('.checkboxGroups').each(function (idx, item) {
                                if (!($(item).closest('tr').is('.k-state-selected'))) {
                                    $(item).click();
                                }
                                // $(item).click();

                            });
                        }
                        else {
                            $('.checkboxGroups').each(function (idx, item) {
                                if (($(item).closest('tr').is('.k-state-selected'))) {
                                    $(item).click();
                                }
                                // $(item).click();

                            });
                        }
                        //var checked = ev.target.checked;

                    });

                    //wire up checkboxes.
                    $('#itemtype-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function (e) {
                        var $check = $(this);
                        if ($check.is(":checked") == true) {
                            var checked = jQuery.inArray($check.val(), selectedIds);
                            if (checked == -1) {
                                //add id to selectedIds.
                                selectedIds.push($check.val());
                            }
                        } else {
                            var checked = jQuery.inArray($check.val(), selectedIds);
                            if (checked > -1) {
                                //remove id from selectedIds.
                                selectedIds = $.grep(selectedIds, function (item, index) {
                                    return item != $check.val();
                                });
                            }
                        }
                        updateMasterCheckbox();
                    });
                });

                function onDataBound(e) {
                    $('#itemtype-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function () {
                        var currentId = $(this).val();
                        var checked = jQuery.inArray(currentId, selectedIds);
                        //set checked based on if current checkbox's value is in selectedIds.
                        $(this).attr('checked', checked > -1);
                    });

                    updateMasterCheckbox();
                }

                function updateMasterCheckbox() {
                    var numChkBoxes = $('#itemtype-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
                    var numChkBoxesChecked = $('#itemtype-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
                    $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);

                    console.log(selectedIds);

                    if (selectedIds.length > 0)
                        $("#delete-selected").removeAttr("disabled");
                    else
                        $("#delete-selected").attr("disabled", true);
                }

                function additionalData() {
                    return {
                        Name: $('#search_name').val(),
                        Code: $('#search_code').val(),
                    };
                }
            </script>

            <script type="text/javascript">

                var _id = 0;

                function removeItem(id) {
                    _id = id;
                    $('#modalDelete').modal('show');
                }

                $("#btnYes").click(function () {
                    var postData = {
                        Id: _id
                    };

                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: "@(Url.Action("Delete", "ItemType"))",
                        data: postData,
                        complete: function (data) {
                            //reload grid
                            var grid = $('#itemtype-grid').data('kendoGrid');
                            grid.dataSource.read();
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert(thrownError);
                        },
                        traditional: true
                    });

                    _id = 0;
                    $('#modalDelete').modal('hide');
                });

                $("#btnCancel").click(function () {
                    _id = 0;
                    $('#modalDelete').modal('hide');
                })
            </script>
        </div>
    </div>
</section>